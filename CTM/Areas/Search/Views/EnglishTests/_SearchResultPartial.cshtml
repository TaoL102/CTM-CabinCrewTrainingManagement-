@using CTM.Areas.Search.ViewModels.EnglishTests
@using CTM.Codes.CustomControls
@using CTMCustomControlLib.Models
@using CTMLocalizationLib.Resources
@model IEnumerable<CTM.Areas.Search.ViewModels.EnglishTests.SearchResult>

<div class="container">

    @if (Model.Any())
    {

        Pager pager = ViewBag.Pager;
        Search searchViewModel = ViewBag.SearchResultViewModel;

        // Pagination
        @Ajax.Pagination(searchViewModel, pager)

        // Table
        @Html.Table_SearchResult(Model)

        // Pagination
        @Ajax.Pagination(searchViewModel, pager)

    }
    else
    {
        <p>@ConstViews.INFO_RecordsNotFound</p>
    }
</div>


@*<!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var updateHub = $.connection.viewDataUpdateHub;
            // Create a function that the hub can call back to display messages.
            updateHub.client.updateSearchResult = function () {
                // Add the message to the page.
                alert("signalR triggered");
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('.btn-round').on("click", function () {
                    // Call the Send method on the hub.
                    updateHub.server.updateSearchResult();

                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>*@

